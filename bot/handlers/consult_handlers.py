import os
from telegram import Update
from telegram.ext import CallbackContext
from bot.logic.consultation_flow import request_consultation

def handle_consult_request(update: Update, context: CallbackContext):
    """–ù–∞–∂–∞–ª–∏ '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'"""
    query = update.callback_query
    query.edit_message_text("üì± –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    context.user_data["awaiting_phone"] = True

def process_consult_request(update: Update, context: CallbackContext):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"""
    phone = update.message.text.strip()
    try:
        consultation_data = request_consultation(phone, user_id=update.effective_user.id)
        
        florist_id = os.getenv("FLORIST_ID")
        if florist_id:
            context.bot.send_message(
                chat_id=florist_id,
                text=f"üìû –ù–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è:\n–¢–µ–ª–µ—Ñ–æ–Ω: {consultation_data['phone']}"
            )
        
        update.message.reply_text("üå∏ –§–ª–æ—Ä–∏—Å—Ç —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏!")
        context.user_data.pop("awaiting_phone", None)
    except ValueError as e:
        update.message.reply_text(
            f"‚ùå {e}\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä."
        )
