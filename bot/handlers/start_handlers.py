from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from .keyboards import generate_start_menu, generate_event_keyboard, generate_budget_keyboard
from .consult_handlers import process_consult_request
from .order_handlers import process_order_step

def handle_start(update: Update, context: CallbackContext):
    """
    /start ‚Äì –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —Ç—Ä–µ–º—è –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏:
    1) –ë—É–∫–µ—Ç—ã
    2) –°–æ–±—ã—Ç–∏–µ
    3) –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è
    """
    update.message.reply_text(
        text="–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å?",
        reply_markup=generate_start_menu()
    )

def handle_start_menu_selection(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: choose_bouquet, choose_event, request_consult."""
    query = update.callback_query
    data = query.data

    if data == "choose_bouquet":
        context.user_data.pop("event", None)
        query.edit_message_text(
            text="üí∞ –ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?",
            reply_markup=generate_budget_keyboard()
        )
    elif data == "choose_event":
        query.edit_message_text(
            text="üéâ –ö –∫–∞–∫–æ–º—É —Å–æ–±—ã—Ç–∏—é –≥–æ—Ç–æ–≤–∏–º—Å—è?",
            reply_markup=generate_event_keyboard()
        )
    elif data == "request_consult":
        from .consult_handlers import handle_consult_request
        handle_consult_request(update, context)
    else:
        query.edit_message_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")

def handle_event_selection(update: Update, context: CallbackContext):
    """
    –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ (birthday, wedding, school, no_reason, custom)
    """
    query = update.callback_query
    data = query.data

    if data == "custom":
        query.edit_message_text("üìù –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –ø–æ–≤–æ–¥:")
        context.user_data["awaiting_event_custom"] = True
    else:
        context.user_data["event"] = data
        query.edit_message_text(
            text="üí∞ –ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?",
            reply_markup=generate_budget_keyboard()
        )

def handle_messages(update: Update, context: CallbackContext):
    """
    –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:
      - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç ¬´–¥—Ä—É–≥–æ–π –ø–æ–≤–æ–¥¬ª,
      - –ï—Å–ª–∏ –≤–≤–æ–¥–∏—Ç —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏,
      - –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.
    """
    if context.user_data.get("awaiting_event_custom"):
        context.user_data["event"] = update.message.text
        del context.user_data["awaiting_event_custom"]

        from .keyboards import generate_budget_keyboard
        update.message.reply_text(
            text="üí∞ –ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?",
            reply_markup=generate_budget_keyboard()
        )
    elif context.user_data.get("awaiting_phone"):
        process_consult_request(update, context)
    elif "order_step" in context.user_data:
        process_order_step(update, context)
    else:
        update.message.reply_text("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
